partial modifier_keys
xkb_symbols "sticky_shift" {
    name[Group1]= "sticky";
    name[Group2]= "legacy";
    key <LFSH> {
        symbols[Group1]= [ ISO_Level2_Latch ],
        symbols[Group2]= [ Shift_L ]
    };
    key <RTSH> {
        symbols[Group1]= [ ISO_Level2_Latch ],
        symbols[Group2]= [ Shift_R ]
    };
    modifier_map Shift { Shift_L, Shift_R, ISO_Level2_Latch };
};

partial modifier_keys
xkb_symbols "lsgt_lvl3_latch" {
    key <LSGT> {
       type[Group1]= "THREE_LEVEL",
       symbols[Group1] = [ ISO_Level3_Latch, ISO_Level3_Latch, ISO_Level3_Latch ]
    };
    include "level3(modifier_mapping)"
};

partial modifier_keys
xkb_symbols "lsgt_control" {
    key <LSGT> { [ Control_R ] };
    modifier_map Control { Control_L, Control_R };
};

partial modifier_keys
xkb_symbols "rwin_lvl3_latch" {
    replace key <RWIN> { [ ISO_Level3_Latch, ISO_Level3_Latch, ISO_Level3_Latch ] };
    include "level3(modifier_mapping)"
};

partial modifier_keys
xkb_symbols "return_ctrl_r" {
    key <RTRN> { [ Control_R ] };
    modifier_map Control { Control_L, Control_R, Return };
};

partial alphanumeric_keys
xkb_symbols "invert_number_row" {
    key <TLDE> { [       grave, asciitilde ] };
    key <AE01> { [      exclam,         1  ] };
    key <AE02> { [          at,         2  ] };
    key <AE03> { [  numbersign,         3  ] };
    key <AE04> { [      dollar,         4  ] };
    key <AE05> { [     percent,         5  ] };
    key <AE06> { [ asciicircum,         6  ] };
    key <AE07> { [   ampersand,         7  ] };
    key <AE08> { [    asterisk,         8  ] };
    key <AE09> { [   parenleft,         9  ] };
    key <AE10> { [  parenright,         0  ] };
    key <BKSL> { [         bar, backslash  ] };
};

partial alphanumeric_keys
xkb_symbols "invert_number_row_offset_parenthesis" {
    key <TLDE> { [       grave, asciitilde ] };
    key <AE01> { [      exclam,         1  ] };
    key <AE02> { [          at,         2  ] };
    key <AE03> { [  numbersign,         3  ] };
    key <AE04> { [      dollar,         4  ] };
    key <AE05> { [     percent,         5  ] };
    key <AE06> { [ asciicircum,         6  ] };
    key <AE07> { [    asterisk,         7  ] };
    key <AE08> { [   parenleft,         8  ] };
    key <AE09> { [  parenright,         9  ] };
    key <AE10> { [   ampersand,         0  ] };
    key <BKSL> { [         bar, backslash  ] };
};

partial alphanumeric_keys
xkb_symbols "virtual_numpad" {
    key <AD07> { [ g, G,     7 ] };
    key <AD08> { [ c, C,     8 ] };
    key <AD09> { [ r, R,     9 ] };
    key <AD10> { [ l, L,  plus ] };

    key <AC06> { [ d, D,     0 ] };
    key <AC07> { [ h, H,     4 ] };
    key <AC08> { [ t, T,     5 ] };
    key <AC09> { [ n, N,     6 ] };
    key <AC10> { [ s, S, equal ] };

    key <AB07> { [ m, M,     1 ] };
    key <AB08> { [ w, W,     2 ] };
    key <AB09> { [ v, V,     3 ] };
    key <AB10> { [ z, Z        ] };

    key <RTRN> { [Return, Return, 0] };
    key <SPCE> { [space, space, 0] };
};

partial keypad_keys
xkb_symbols "default_numlock" {
    key  <KP7> { [ 7,           KP_Home     ] };
    key  <KP8> { [ 8,           KP_Up       ] };
    key  <KP9> { [ 9,           KP_Prior    ] };

    key  <KP4> { [ 4,           KP_Left     ] };
    key  <KP5> { [ 5,           KP_Begin    ] };
    key  <KP6> { [ 6,           KP_Right    ] };

    key  <KP1> { [ 1,           KP_End      ] };
    key  <KP2> { [ 2,           KP_Down     ] };
    key  <KP3> { [ 3,           KP_Next     ] };
    key <KPEN> { [              KP_Enter    ] };
    key <KPEQ> { [ equal,       KP_Equal    ] };
    key <KPAD> { [ plus,        KP_Add      ] };

    key  <KP0> { [ 0,           KP_Insert   ] };
    key <KPDL> { [ KP_Decimal,  KP_Delete   ] };
    key <KPPT> { [ KP_Decimal,  KP_Decimal  ] };
};

partial alphanumeric_keys
xkb_symbols "virtual_movement" {
    key <AD03> { [ period, greater,    Up ] };
    key <AC02> { [      o,       O,  Left ] };
    key <AC03> { [      e,       E,  Down ] };
    key <AC04> { [      u,       U, Right ] };
};

partial alphanumeric_keys modifier_keys
xkb_symbols "backspace_also_deletes" {
    key <BKSP> { [ BackSpace, BackSpace, Delete ] };
};
